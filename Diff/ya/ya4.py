n,x,y = map(int, input().split())

#Сначала печатаем вторую копию на самом быстром копире
minut = min(x, y)

x, y = min(x, y), max(x, y)

n -= 1


#Нахожу наименьшее общее кратное
def lcm(a,b):
    m = a*b
    while a != 0 and b != 0:
        if a > b:
            a %= b
        else:
            b %= a
    return m // (a+b)

#Длительность синхронного блока работы, мин
LCM = lcm(x,y)
#Сколько копий сделает первый принтер за это время
x_copy = LCM / x
#Сколько копий сделает второй принтер за это время
y_copy = LCM / y
#Сколько копий сделают оба принтера за LCM время
xy_copy = x_copy + y_copy

#Сколько синхронных блоков целиком произойдет
blocks = n // xy_copy

#Добавляем столько минут, сколько пройдет целых синхронных блоков печати
minut += LCM * blocks


#Сколько копий останется сделать после проходления синхронных блоков печати
ostat = n % xy_copy

#Если остаток равен нудлю то программа закончена
#!!!FIXME


# ELSE
#Если не равен нулю, считаем, за какое время самый быстрый принтер может всё напечатать



time_1 = ostat * x
time_2 = 0

i = 1
#Отдаем медленному принтеру по 1 копии и считаем разницу во времени
while time_1 > time_2:
    time_2 = y * i
    time_1 = time_1 - x
    i += 1

minut += time_1

print(int(minut))


















#print(LCM)

